include:
    - template: Dependency-Scanning.gitlab-ci.yml
    - template: SAST.gitlab-ci.yml
    - template: Code-Quality.gitlab-ci.yml
    - template: License-Scanning.gitlab-ci.yml

stages:
    - test
    - build
    - testing
    - post-test
    - publish

Build Latest:
    cache:
        key: node_modules-latest
        paths:
            - node_modules/
    artifacts:
        untracked: true
        expire_in: 60s
        paths:
            - node_mudules/
    image: node:latest
    stage: build
    needs: []
    script:
        - yarn install --frozen-lockfile

Test Latest:
    stage: testing
    needs: ['Build Latest']
    image: node:latest
    before_script:
        - yarn global add nyc
    script:
        - nyc --silent yarn test
    artifacts:
        reports:
            junit: test-results.xml
        expire_in: 60s
        paths:
            - .nyc_output/

Coverage Latest:
    stage: post-test
    needs: ['Test Latest']
    image: node:latest
    before_script:
        - yarn global add nyc
    script:
        - nyc report

Build LTS:
    extends: 'Build Latest'
    cache:
        key: node_modules-lts
    image: node:lts

Test LTS:
    extends: 'Test Latest'
    needs: ['Build LTS']
    image: node:lts

Coverage LTS:
    extends: 'Coverage Latest'
    needs: ['Test LTS']
    image: node:lts
    before_script:
        - yarn global add nyc
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
    script:
        - nyc report --reporter text --reporter cobertura --reporter lcov
        - ./cc-test-reporter after-build --exit-code 0
    artifacts:
        reports:
            cobertura: coverage/cobertura-coverage.xml

Lint:
    stage: post-test
    needs: ['Build Latest', 'Build LTS']
    image: node:lts
    script:
        - yarn prettier --check .

Publish:
    stage: publish
    needs: ['Lint', 'Test Latest', 'Test LTS']
    image: node:lts
    before_script:
        - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
    script:
        - yarn publish
    only:
        - tags
